{"version":3,"sources":["logo.svg","LoremWindow.js","App.js","reportWebVitals.js","index.js"],"names":["LoremWindow","props","quantity","quantityArr","x","push","content","id","map","element","className","renderTextContent","App","ipsumData","contentPreview","useState","wordCount","setWordCount","textCount","setTextCount","inputValue","setInputValue","setContent","addWord","y","word","Math","floor","random","toUpperCase","substring","onChange","value","target","placeholder","class","onClick","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d673eab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./index.css\"\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nfunction LoremWindow(props) {\r\n\r\n  let quantity = props.quantity;\r\n  let quantityArr = [];\r\n  for (let x = 0; x < quantity; x++) {\r\n    quantityArr.push(props.content[x])\r\n  }\r\n  function renderTextContent(element) {\r\n      return (\r\n        <p className=\"LoremIpsum\">\r\n        {element}\r\n        </p>\r\n      )\r\n  }\r\n\r\n  let renderedText = (\r\n    <div id=\"LoremWindow\">\r\n      {quantityArr.map((element) =>\r\n        renderTextContent(element))}\r\n    </div>\r\n  );\r\n\r\n  return renderedText;\r\n}\r\n\r\nexport default LoremWindow;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport LoremWindow from \"./LoremWindow\"\nimport ReactDOM from \"react-dom\"\nimport React, { useState } from \"react\"\n\nfunction App() {\n\n  const ipsumData = [\n  \"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\",\n  \"proin\", \"vehicula\", \"neque\", \"eu\", \"tempus\", \"sollicitudin\", \"lectus\", \"arcu\",\n  \"fermentum\", \"eros\", \"in\", \"tempor\", \"ex\", \"leo\", \"quis\", \"libero\",\n  \"donec\", \"tristique\", \"massa\", \"rhoncus\", \"finibus\", \"pulvinar\", \"vestibulum\", \"tristique\",\n  \"velit\", \"ac\", \"augue\", \"iaculis\", \"nec\", \"tincidunt\", \"facilisis\", \"id\",\n  \"suscipit\", \"purus\", \"pellentesque\", \"felis\", \"eleifend\", \"ut\", \"est\", \"at\",\n  \"faucibus\", \"eleifend\", \"magna\", \"integer\", \"blandit\", \"ornare\", \"dui\", \"cursus\",\n  \"urna\", \"aliquet\", \"porta\", \"erat\", \"vitae\", \"tincidunt\", \"odio\", \"congue\",\n  \"praesent\", \"tristique\", \"accumsan\", \"sed\", \"aliquam\", \"a\", \"orci\", \"non\",\n  \"mollis\", \"usce\", \"porttitor\", \"orci\", \"pharetra\", \"ullamcorper\", \"iaculis\", \"turpis\",\n  \"nisl\", \"egestas\", \"nulla\", \"justo\", \"enim\", \"suspendisse\", \"ac\", \"ante\",\n  \"tortor\", \"viverra\", \"mauris\", \"nam\", \"dapibus\", \"velit\", \"rutrum\", \"condimentum\",\n  \"accumsan\", \"faucibus\", \"nibh\", \"sem\", \"vel\",\n  ]\n\n  let contentPreview = []\n  const [wordCount, setWordCount] = useState(0);\n  const [textCount, setTextCount] = useState(0);\n  const [inputValue, setInputValue] = useState(0);\n  const [content, setContent] = useState([])\n  function setParagraphQuantity(value) {\n    setInputValue(value.target.value)\n  }\n  function setWordQuantity(value) {\n    setWordCount(value.target.value)\n  }\n  function addWord(x, y) {\n    let word = ipsumData[Math.floor(Math.random() * 100)]\n    if (y == 0) word = word[0].toUpperCase() + word.substring(1)\n    contentPreview[x] += word;\n    contentPreview[x] += \" \";\n  }\n  function evalTextCount() {\n    for (let x = 0; x < inputValue; x++) {\n      contentPreview[x] = \"\"\n     for (let y = 0; y < wordCount; y++) addWord(x, y)\n    }\n\n    setContent(contentPreview);\n    if (inputValue <= 0) alert(\"Selecione uma numeração válida!\");\n    else if (inputValue >= 11) alert(\"Não podemos gerar mais de 10 parágrafos por vez!\");\n    else setTextCount(inputValue);\n  }\n\n  function setCountZero() {\n    setTextCount(0);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <div id=\"title\">\n        <h1>Gerador de Lorem Ipsum</h1>\n       </div>\n        <LoremWindow quantity={textCount} content={content} />\n        <p>Num clique de um botão, gere múltiplos parágrafos de Lorem Ipsum!</p>\n        <input className=\"quantity\"\n        onChange={setWordQuantity}\n        placeholder=\"Digite quantas palavras você quer...\"></input>\n        <input className=\"quantity\"\n        onChange={setParagraphQuantity}\n        placeholder=\"Digite quantos parágrafos você quer...\"></input>\n        <button class=\"generate\" onClick={evalTextCount}>Gerar Lorem Ipsum</button>\n        <button class=\"generate marginBottom\" onClick={setCountZero}>Apagar</button>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}